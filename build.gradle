buildscript {
    repositories {
        gradlePluginPortal()
        mavenCentral()
    }
    dependencies {
        classpath "io.micronaut.build.internal:micronaut-gradle-plugins:4.2.4"
        classpath "io.micronaut.gradle:micronaut-gradle-plugin:3.1.0"
    }
}

ext {
    ociBom = new groovy.xml.XmlSlurper().parse(
            "https://repo.maven.apache.org/maven2/com/oracle/oci/sdk/oci-java-sdk-bom/$ociVersion/oci-java-sdk-bom-${ociVersion}.pom"
    )
}

subprojects { Project subproject ->
//    repositories {
//        maven { url "https://s01.oss.sonatype.org/content/repositories/snapshots/" }
//    }

    group "io.micronaut.oraclecloud"

    if (subproject.name == 'oraclecloud-bom') {
        apply plugin: "java-platform"
        version projectVersion
    } else {
        repositories {
            mavenCentral()
        }

        apply plugin: "io.micronaut.build.internal.common"

        dependencies {
            api platform("com.oracle.oci.sdk:oci-java-sdk-bom:$ociVersion")
            implementation 'jakarta.inject:jakarta.inject-api:2.0.1'
            testImplementation("io.micronaut.test:micronaut-test-junit5")
            testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
            testAnnotationProcessor "io.micronaut:micronaut-inject-java"
        }

        tasks.withType(JavaCompile) {
            options.encoding = "UTF-8"
            options.compilerArgs.addAll([
                    '-parameters',
                    // enables incremental compilation
                    '-Amicronaut.processing.incremental=true',
                    '-Amicronaut.processing.annotations=io.micronaut.oraclecloud.*',
                    "-Amicronaut.processing.group=$project.group",
                    "-Amicronaut.processing.module=$project.name",
            ])
        }
    }

    apply plugin: "io.micronaut.build.internal.dependency-updates"
    if (!['oraclecloud-sdk-processor', 'oraclecloud-atp-hikari-test', 'oraclecloud-atp-ucp-test'].contains(subproject.name)) {
        apply plugin: "io.micronaut.build.internal.publishing"
    }
}

apply plugin: "io.micronaut.build.internal.docs"
apply plugin: "io.micronaut.build.internal.dependency-updates"
