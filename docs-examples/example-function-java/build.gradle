import io.micronaut.gradle.docker.DockerBuildStrategy

plugins {
    id 'io.micronaut.build.internal.oraclecloud-example'
    id 'org.graalvm.buildtools.native'
}

dependencies {
    implementation mn.micronaut.runtime
    implementation projects.oraclecloudFunction
    runtimeOnly libs.fn.runtime
    runtimeOnly mn.slf4j.simple
    testAnnotationProcessor mn.micronaut.inject.java
    testImplementation libs.fn.testing.junit4
    testImplementation mn.micronaut.test.junit5
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

project.afterEvaluate {
    testNativeImage.enabled = false
}

application.mainClass.set 'com.fnproject.fn.runtime.EntryPoint'

graalvmNative {
    binaries.configureEach {
        buildArgs.addAll(
                '--static',
                '-Dfn.handler=example.ListBucketsFunction::handleRequest',
                '--initialize-at-build-time=example'
        )
    }
}

tasks {
    dockerfileNative {
        args('-XX:MaximumHeapSizePercent=80')
        buildStrategy.set(DockerBuildStrategy.ORACLE_FUNCTION)
        defaultCommand.set('example.ListBucketsFunction::handleRequest')
    }

    dockerfile {
        buildStrategy.set(DockerBuildStrategy.ORACLE_FUNCTION)
        defaultCommand.set('example.ListBucketsFunction::handleRequest')
    }

    dockerBuild {
        images = ["[REGION].ocir.io/[TENANCY]/[REPO]/$project.name:$project.version"]
    }

    dockerBuildNative {
        images = ["[REGION].ocir.io/[TENANCY]/[REPO]/$project.name-native:$project.version"]
    }
}

run {
    args('example.ListBucketsFunction::handleRequest')
}
