plugins {
    id 'io.micronaut.build.internal.oraclecloud-example'
    id 'com.github.johnrengelman.shadow'
    id 'org.graalvm.buildtools.native'
}

dependencies {
    annotationProcessor mn.micronaut.graal
    implementation mn.micronaut.runtime
    implementation mn.reactor
    implementation projects.oraclecloudFunctionHttp
    runtimeOnly libs.fn.runtime
    runtimeOnly mn.slf4j.simple
    testAnnotationProcessor mn.micronaut.inject.java
    testImplementation mn.micronaut.test.junit5
    testImplementation projects.oraclecloudFunctionHttpTest
    testRuntimeOnly libs.junit.jupiter
}

application.mainClass.set 'com.fnproject.fn.runtime.EntryPoint'

run {
    args('io.micronaut.oraclecloud.function.http.HttpFunction::handleRequest')
}

tasks {
    dockerfileNative {
        args('-XX:MaximumHeapSizePercent=80')
    }

    dockerBuild {
        images = ["[REGION].ocir.io/[TENANCY]/[REPO]/$project.name:$project.version"]
    }

    dockerBuildNative {
        images = ["[REGION].ocir.io/[TENANCY]/[REPO]/$project.name-native:$project.version"]
    }
}

graalvmNative {
    binaries.configureEach {
        buildArgs.add '--initialize-at-build-time=example'
    }
}

project.afterEvaluate {
    nativeCompile.enabled = false
    testNativeImage.enabled = false
}
