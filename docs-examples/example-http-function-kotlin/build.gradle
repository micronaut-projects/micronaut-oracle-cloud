plugins {
    id("org.jetbrains.kotlin.jvm") version "1.4.32"
    id("org.jetbrains.kotlin.kapt") version "1.4.32"
    id "io.micronaut.application"
    id("org.jetbrains.kotlin.plugin.allopen") version "1.4.32"
}

dependencies {
    annotationProcessor "io.micronaut:micronaut-graal"
    implementation 'io.micronaut:micronaut-validation'
    implementation project(":oraclecloud-sdk")
    implementation project(":oraclecloud-function-http")
    implementation "com.oracle.oci.sdk:oci-java-sdk-objectstorage", {
        exclude module:'javassist'
    }
    implementation("org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion")
    runtimeOnly 'org.slf4j:slf4j-simple:1.7.30'
    runtimeOnly "com.fnproject.fn:runtime:$fnVersion"
    runtimeOnly "com.fasterxml.jackson.module:jackson-module-kotlin"
    testImplementation project(":oraclecloud-function-http-test")
    testImplementation 'io.micronaut:micronaut-http-client'
    testImplementation("io.micronaut.test:micronaut-test-junit5")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
}

mainClassName = "com.fnproject.fn.runtime.EntryPoint"

run {
    args("io.micronaut.oraclecloud.function.http.HttpFunction::handleRequest")
}

nativeImage {
  args("--initialize-at-build-time=example")
}

testNativeImage.enabled=false
