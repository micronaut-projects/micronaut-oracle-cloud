plugins {
    id 'io.micronaut.build.internal.oraclecloud-module'
}

dependencies {
    annotationProcessor projects.oraclecloudSdkProcessor
    api projects.oraclecloudCommon, {
        exclude group:'commons-logging', module:'commons-logging'
    }
    api("com.oracle.oci.sdk:oci-java-sdk-addons-graalvm:$ociVersion") {
        transitive = false
    }
    api projects.oraclecloudHttpclientNetty
    compileOnly libs.graal.svm
    compileOnly mnRxjava2.rxjava2
    testImplementation libs.graal.svm
    testImplementation mnTest.micronaut.test.spock
    testImplementation mnRxjava2.rxjava2

    // optional modules
    for (name in gradle.ociBom.dependencyManagement.dependencies.dependency.artifactId*.text()) {
        compileOnly "com.oracle.oci.sdk:$name:$ociVersion"
        testImplementation "com.oracle.oci.sdk:$name:$ociVersion"
        annotationProcessor "com.oracle.oci.sdk:$name:$ociVersion"
    }
}

spotlessJavaMiscCheck.enabled = false
compileJava.options.fork = true

tasks.withType(me.champeau.gradle.japicmp.JapicmpTask) {
    // Ignore changes in the generated factories for the new OCI Java SDK
    packageExcludes = ["io.micronaut.oraclecloud.clients.*"]
}
