# WARNING: Do not edit this file directly. Instead, go to:
#
# https://github.com/micronaut-projects/micronaut-project-template/tree/master/.github/workflows
#
# and edit them there. Note that it will be sync'ed to all the Micronaut repos
name: GraalVM CE CI
on:
  push:
    branches:
      - master
      - '[1-9]+.[0-9]+.x'
  pull_request:
    branches:
      - master
      - '[1-9]+.[0-9]+.x'
jobs:
  build:
    if: github.repository != 'micronaut-projects/micronaut-project-template'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: ['java11']
    steps:
       # https://github.com/actions/virtual-environments/issues/709
      - name: Free disk space
        run: |
         sudo rm -rf "/usr/local/share/boost"
         sudo rm -rf "$AGENT_TOOLSDIRECTORY"
         sudo apt-get clean
         df -h    
      - uses: actions/checkout@v2
      - uses: actions/cache@v2.1.6
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Setup GraalVM CE
        uses: DeLaGuardo/setup-graalvm@4.0
        with:
          graalvm: 21.2.0
          java: ${{ matrix.java }}
      - name: Install Native Image
        run: gu install native-image
      - name: Build with Gradle
        run: |
          if ./gradlew tasks --no-daemon --all | grep -w "testNativeImage"
          then
            ./gradlew check testNativeImage --continue --no-daemon
          else
            ./gradlew check --continue --no-daemon
          fi
        env:
           MICRONAUT_ENV_DEDUCTION: false
           OCI_FINGERPRINT: ${{ secrets.OCI_FINGERPRINT }}
           OCI_PRIVATE_KEY: ${{ secrets.OCI_PRIVATE_KEY }}
           OCI_REGION: ${{ secrets.OCI_REGION }}
           OCI_TENANT_ID: ${{ secrets.OCI_TENANT_ID }}
           OCI_USER_ID: ${{ secrets.OCI_USER_ID }}
           OCI_PASSPHRASE: ${{ secrets.OCI_PASSPHRASE }}
           ATP_OCID: ${{ secrets.ATP_OCID }}
           ATP_USER: ${{ secrets.ATP_USER }}
           ATP_PASS: ${{ secrets.ATP_PASS }}
           VAULT_OCID: ${{ secrets.VAULT_OCID }}
           VAULT_SECRETS_COMPARTMENT_OCID: ${{ secrets.VAULT_SECRETS_COMPARTMENT_OCID }}
           VAULT_SECRET_NAME: ${{ secrets.VAULT_SECRET_NAME }}
           VAULT_SECRET_VALUE: ${{ secrets.VAULT_SECRET_VALUE }}
           TESTCONTAINERS_RYUK_DISABLED: true
           GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
      - name: Publish Test Report
        if: always()
        uses: mikepenz/action-junit-report@v2
        with:
          check_name: GraalVM CE CI / Test Report (${{ matrix.java }})
          report_paths: '**/build/test-results/test/TEST-*.xml'
