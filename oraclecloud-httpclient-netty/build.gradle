plugins {
    id 'io.micronaut.build.internal.oraclecloud-module'
}

dependencies {
    annotationProcessor mnSerde.micronaut.serde.processor
    implementation mn.netty.codec.http

    implementation(libs.oci.common) {
        exclude(group:"com.fasterxml.jackson.core", module:"jackson-databind")
    }
    api(libs.oci.common.httpclient) {
        exclude(group:"com.fasterxml.jackson.core", module:"jackson-databind")
    }
    api mnSerde.micronaut.serde.api
    implementation mn.micronaut.http.client
    implementation mn.reactor
    implementation mnSerde.micronaut.serde.support
    implementation mnSerde.micronaut.serde.jackson // Includes ObjectMapper implementation
    compileOnly libs.oci.oke.workload.identity

    testImplementation(mn.micronaut.http.server.netty)
    // for self-signed certs
    testImplementation("org.bouncycastle:bcpkix-jdk15on:1.70")
    testImplementation(projects.micronautOraclecloudSdk) {
        exclude group: 'com.oracle.oci.sdk'
    }

    testAnnotationProcessor mn.micronaut.inject.java
    testAnnotationProcessor projects.micronautOraclecloudSerdeProcessor
    testCompileOnly mn.micronaut.jackson.databind
    testRuntimeOnly mn.micronaut.runtime

    testImplementation mn.micronaut.inject.java.test
    testImplementation mnSerde.micronaut.serde.processor
    testImplementation projects.micronautOraclecloudSerdeProcessor
    testImplementation mn.micronaut.management
    testImplementation mn.micronaut.context

    [projects.micronautOraclecloudBmcMonitoring,
     projects.micronautOraclecloudBmcIdentity,
     projects.micronautOraclecloudBmcObjectstorage,
     projects.micronautOraclecloudBmcKeymanagement,
     projects.micronautOraclecloudBmcSecrets,
     projects.micronautOraclecloudBmcVault,
     projects.micronautOraclecloudBmcLogging,
     projects.micronautOraclecloudBmcLoggingingestion,
     projects.micronautOraclecloudBmcLoggingsearch,
     projects.micronautOraclecloudBmcStreaming
    ].forEach(module -> testImplementation(module))
}
tasks.withType(Test).configureEach {
    useJUnitPlatform()
}
